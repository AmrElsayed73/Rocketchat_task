Here i am going to remove all the resource that i created by terraform destroy 

C:\Users\LMNX7392\Desktop\Terraform_lab\system_task>terraform destroy

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.myecs will be destroyed
  - resource "aws_instance" "myecs" {
      - ami                          = "ami-05b622b5fa0269787" -> null
      - arn                          = "arn:aws:ec2:us-west-2:769489610185:instance/i-0e4576f9acb8fdf2f" -> null
      - associate_public_ip_address  = true -> null
      - availability_zone            = "us-west-2a" -> null
      - cpu_core_count               = 1 -> null
      - cpu_threads_per_core         = 1 -> null
      - disable_api_termination      = false -> null
      - ebs_optimized                = false -> null
      - get_password_data            = false -> null
      - hibernation                  = false -> null
      - id                           = "i-0e4576f9acb8fdf2f" -> null
      - instance_state               = "running" -> null
      - instance_type                = "t2.micro" -> null
      - ipv6_address_count           = 0 -> null
      - ipv6_addresses               = [] -> null
      - key_name                     = "myseckey" -> null
      - monitoring                   = false -> null
      - primary_network_interface_id = "eni-0cac653675a43b6b7" -> null
      - private_dns                  = "ip-172-31-20-213.us-west-2.compute.internal" -> null
      - private_ip                   = "172.31.20.213" -> null
      - public_dns                   = "ec2-52-41-175-112.us-west-2.compute.amazonaws.com" -> null
      - public_ip                    = "52.41.175.112" -> null
      - secondary_private_ips        = [] -> null
      - security_groups              = [
          - "ssh_ecs",
        ] -> null
      - source_dest_check            = true -> null
      - subnet_id                    = "subnet-a33e83db" -> null
      - tenancy                      = "default" -> null
      - vpc_security_group_ids       = [
          - "sg-04283cd398c2c613e",
        ] -> null

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 1 -> null
          - http_tokens                 = "optional" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/xvda" -> null
          - encrypted             = false -> null
          - iops                  = 100 -> null
          - tags                  = {} -> null
          - throughput            = 0 -> null
          - volume_id             = "vol-0b9504df4956de334" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp2" -> null
        }
    }

  # aws_security_group.allow_ssh will be destroyed
  - resource "aws_security_group" "allow_ssh" {
      - arn                    = "arn:aws:ec2:us-west-2:769489610185:security-group/sg-04283cd398c2c613e" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "Outbound Allowed"
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 65535
            },
        ] -> null
      - id                     = "sg-04283cd398c2c613e" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "HTTP"
              - from_port        = 80
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 80
            },
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "SSH into ecs"
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 22
            },
        ] -> null
      - name                   = "ssh_ecs" -> null
      - owner_id               = "769489610185" -> null
      - revoke_rules_on_delete = false -> null
      - vpc_id                 = "vpc-9f84a4e7" -> null
    }

Plan: 0 to add, 0 to change, 2 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_instance.myecs: Destroying... [id=i-0e4576f9acb8fdf2f]
aws_instance.myecs: Still destroying... [id=i-0e4576f9acb8fdf2f, 10s elapsed]
aws_instance.myecs: Still destroying... [id=i-0e4576f9acb8fdf2f, 20s elapsed]
aws_instance.myecs: Still destroying... [id=i-0e4576f9acb8fdf2f, 30s elapsed]
aws_instance.myecs: Destruction complete after 34s
aws_security_group.allow_ssh: Destroying... [id=sg-04283cd398c2c613e]
aws_security_group.allow_ssh: Destruction complete after 3s

Destroy complete! Resources: 2 destroyed.

C:\Users\LMNX7392\Desktop\Terraform_lab\system_task>
